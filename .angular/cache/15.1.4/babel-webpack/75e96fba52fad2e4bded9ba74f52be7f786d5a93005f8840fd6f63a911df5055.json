{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"../services/data.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction RegisterComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Please provide an email. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Please provide a password. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Please enter your first name. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(fb, userService, dataService, router) {\n      this.fb = fb;\n      this.userService = userService;\n      this.dataService = dataService;\n      this.router = router;\n      this.toasts = [];\n    }\n    ngOnInit() {\n      this.registerForm = this.fb.group({\n        email: [\"\", Validators.required],\n        password: [\"\", Validators.required],\n        firstName: [\"\", Validators.required]\n      });\n      this.registerForm.patchValue({\n        email: this.dataService.email\n      });\n    }\n    submit(info) {\n      try {\n        this.userService.createUser(info.email, info.password, info.firstName).subscribe(user => {\n          const now = new Date();\n          this.dataService.setUser(user);\n          localStorage.setItem(\"user\", JSON.stringify({\n            user,\n            expiry: now.getTime() + 1000000\n          }));\n          this.router.navigate([`/dashboard`]);\n        }), err => {\n          console.log(\"Add user error\", err);\n        };\n      } catch (err) {\n        console.log(\"ERROR\", err.error);\n      }\n    }\n  }\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.DataService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 28,\n    vars: 5,\n    consts: [[1, \"container\"], [2, \"margin-top\", \"64px\"], [1, \"morePadding\"], [1, \"modal-body\"], [3, \"formGroup\"], [\"formDir\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"email\"], [\"id\", \"email\", \"placeholder\", \"Email\", \"name\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"email\", \"\"], [\"class\", \"blue\", 4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"password\", \"\"], [\"for\", \"firstName\"], [\"type\", \"search\", \"placeholder\", \"First Name\", \"aria-label\", \"User first name\", \"id\", \"firstName\", \"type\", \"text\", \"name\", \"firstName\", \"formControlName\", \"firstName\", \"required\", \"\", 1, \"form-control\"], [\"firstName\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-dark\", 3, \"disabled\", \"click\"], [1, \"blue\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \" Create an account or login to start posting! \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"form\", 4, 5)(8, \"div\", 6)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8, 9);\n        i0.ɵɵtemplate(13, RegisterComponent_div_13_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\", 11);\n        i0.ɵɵtext(16, \"Password [NOTE: not secure, for example purposes]\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 12, 13);\n        i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 6)(21, \"label\", 14);\n        i0.ɵɵtext(22, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 15, 16);\n        i0.ɵɵtemplate(25, RegisterComponent_div_25_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_26_listener() {\n          i0.ɵɵrestoreView(_r7);\n          const _r1 = i0.ɵɵreference(12);\n          const _r5 = i0.ɵɵreference(24);\n          return i0.ɵɵresetView(ctx.submit({\n            email: _r1.value,\n            firstName: _r5.value\n          }));\n        });\n        i0.ɵɵtext(27, \" Sign Up/ Log In \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"email\").invalid && (ctx.registerForm.get(\"email\").dirty || ctx.registerForm.get(\"email\").touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"password\").invalid && (ctx.registerForm.get(\"password\").dirty || ctx.registerForm.get(\"password\").touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"firstName\").invalid && (ctx.registerForm.get(\"firstName\").dirty || ctx.registerForm.get(\"firstName\").touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}